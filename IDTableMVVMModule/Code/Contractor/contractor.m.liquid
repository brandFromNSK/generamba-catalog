{% include 'header' %}


#import "{{ prefix }}{{ module_info.name }}Contractor.h"
#import "{{ prefix }}{{ module_info.name }}ViewModel.h"
#import "IDCellViewModelProtocol.h"
#import "IDTableViewCell.h"


@implementation {{ prefix }}{{ module_info.name }}Contractor

#pragma mark - Bindings
- (void)bindCellViewModels {
    [self rac_liftSelector:@selector(updateTableViewWithCellViewModels:) withSignals:RACObserve(self.viewModel, cellViewModels), nil];
}

#pragma mark - TableViewDelegate methods
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {

    NSUInteger row = (NSUInteger)indexPath.row;
    
    id<IDCellViewModelProtocol> cellViewModel = self.viewModel.cellViewModels[row];
    IDTableViewCell *cell = [super tableView:tableView cellForRowAtIndexPath:indexPath withIdentifier:cellViewModel.cellIdentifier viewModel:cellViewModel];
    
    return cell;
}


#pragma mark - TableViewDataSource methods
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.viewModel.cellViewModels.count;
}

@end
